{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\"; // Hook\n\nfunction useWindowSize() {\n  _s();\n\n  // Initialize state with undefined width/height so server and client renders match\n  // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n  var _useState = useState({\n    width: undefined,\n    height: undefined\n  }),\n      windowSize = _useState[0],\n      setWindowSize = _useState[1];\n\n  useEffect(function () {\n    // Handler to call on window resize\n    function handleResize() {\n      // Set window width/height to state\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight\n      });\n    } // Add event listener\n\n\n    window.addEventListener(\"resize\", handleResize); // Call handler right away so state gets updated with initial window size\n\n    handleResize(); // Remove event listener on cleanup\n\n    return function () {\n      return window.removeEventListener(\"resize\", handleResize);\n    };\n  }, []); // Empty array ensures that effect is only run on mount\n\n  return windowSize;\n}\n\n_s(useWindowSize, \"WMqaMVAPr0u8CJVTsAIdEuYrbbM=\");\n\nexport default useWindowSize;","map":{"version":3,"sources":["/Users/lutfi/Desktop/weekend-stuff/twitter-clone/hooks/useWindowSize.js"],"names":["useState","useEffect","useWindowSize","width","undefined","height","windowSize","setWindowSize","handleResize","window","innerWidth","innerHeight","addEventListener","removeEventListener"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC,C,CACA;;AACA,SAASC,aAAT,GAAyB;AAAA;;AACvB;AACA;AAFuB,kBAGaF,QAAQ,CAAC;AAC3CG,IAAAA,KAAK,EAAEC,SADoC;AAE3CC,IAAAA,MAAM,EAAED;AAFmC,GAAD,CAHrB;AAAA,MAGhBE,UAHgB;AAAA,MAGJC,aAHI;;AAQvBN,EAAAA,SAAS,CAAC,YAAM;AACd;AACA,aAASO,YAAT,GAAwB;AACtB;AACAD,MAAAA,aAAa,CAAC;AACZJ,QAAAA,KAAK,EAAEM,MAAM,CAACC,UADF;AAEZL,QAAAA,MAAM,EAAEI,MAAM,CAACE;AAFH,OAAD,CAAb;AAID,KARa,CAUd;;;AACAF,IAAAA,MAAM,CAACG,gBAAP,CAAwB,QAAxB,EAAkCJ,YAAlC,EAXc,CAad;;AACAA,IAAAA,YAAY,GAdE,CAgBd;;AACA,WAAO;AAAA,aAAMC,MAAM,CAACI,mBAAP,CAA2B,QAA3B,EAAqCL,YAArC,CAAN;AAAA,KAAP;AACD,GAlBQ,EAkBN,EAlBM,CAAT,CARuB,CA0Bf;;AAER,SAAOF,UAAP;AACD;;GA7BQJ,a;;AA+BT,eAAeA,aAAf","sourcesContent":["import { useState, useEffect } from \"react\";\n// Hook\nfunction useWindowSize() {\n  // Initialize state with undefined width/height so server and client renders match\n  // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n  const [windowSize, setWindowSize] = useState({\n    width: undefined,\n    height: undefined,\n  });\n\n  useEffect(() => {\n    // Handler to call on window resize\n    function handleResize() {\n      // Set window width/height to state\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight,\n      });\n    }\n    \n    // Add event listener\n    window.addEventListener(\"resize\", handleResize);\n    \n    // Call handler right away so state gets updated with initial window size\n    handleResize();\n    \n    // Remove event listener on cleanup\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []); // Empty array ensures that effect is only run on mount\n\n  return windowSize;\n}\n\nexport default useWindowSize;\n"]},"metadata":{},"sourceType":"module"}