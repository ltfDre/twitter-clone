{"ast":null,"code":"var _jsxFileName = \"/Users/lutfi/Desktop/weekend-stuff/twitter-clone/pages/_app.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useState } from \"react\";\nimport StoreContext from \"../store\";\nimport \"../styles/app.css\";\nexport default function MyApp({\n  Component,\n  pageProps\n}) {\n  const {\n    0: theme,\n    1: setTheme\n  } = useState(\"light\");\n\n  const changeTheme = theme => {\n    setTheme(theme);\n    localStorage.setItem(\"THENE\", theme);\n  };\n\n  useEffect(() => {\n    const $html = document.querySelector(\"html\");\n    $html.classList.remove(\"light\");\n    $html.classList.remove(\"dark\");\n    $html.classList.remove(\"dim\");\n  });\n  return __jsx(StoreContext.Provider, {\n    value: {\n      theme,\n      changeTheme\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, __jsx(Component, _extends({}, pageProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/lutfi/Desktop/weekend-stuff/twitter-clone/pages/_app.js"],"names":["React","useState","StoreContext","MyApp","Component","pageProps","theme","setTheme","changeTheme","localStorage","setItem","useEffect","$html","document","querySelector","classList","remove"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,YAAP,MAAyB,UAAzB;AACA,OAAO,mBAAP;AAEA,eAAe,SAASC,KAAT,CAAe;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAf,EAAwC;AACrD,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBN,QAAQ,CAAC,OAAD,CAAlC;;AAEA,QAAMO,WAAW,GAAGF,KAAK,IAAI;AAC3BC,IAAAA,QAAQ,CAACD,KAAD,CAAR;AACAG,IAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BJ,KAA9B;AACD,GAHD;;AAKAK,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMC,KAAK,GAAGC,QAAQ,CAACC,aAAT,CAAuB,MAAvB,CAAd;AACAF,IAAAA,KAAK,CAACG,SAAN,CAAgBC,MAAhB,CAAuB,OAAvB;AACAJ,IAAAA,KAAK,CAACG,SAAN,CAAgBC,MAAhB,CAAuB,MAAvB;AACAJ,IAAAA,KAAK,CAACG,SAAN,CAAgBC,MAAhB,CAAuB,KAAvB;AAED,GANQ,CAAT;AAOA,SACE,MAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAE;AAACV,MAAAA,KAAD;AAAOE,MAAAA;AAAP,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD,eAAeH,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,CADF;AAKD","sourcesContent":["import React, { useState } from \"react\";\n\nimport StoreContext from \"../store\";\nimport \"../styles/app.css\";\n\nexport default function MyApp({ Component, pageProps }){\n  const [theme, setTheme] = useState(\"light\")\n\n  const changeTheme = theme => {\n    setTheme(theme)\n    localStorage.setItem(\"THENE\", theme)\n  }\n\n  useEffect(() => {\n    const $html = document.querySelector(\"html\");\n    $html.classList.remove(\"light\")\n    $html.classList.remove(\"dark\")\n    $html.classList.remove(\"dim\")\n\n  })\n  return (\n    <StoreContext.Provider value={{theme,changeTheme}}>\n      <Component {...pageProps} />\n    </StoreContext.Provider>\n  )\n}"]},"metadata":{},"sourceType":"module"}